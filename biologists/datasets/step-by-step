Для ДЗ нужно:
    Пойти по ссылке https://docs.google.com/spreadsheets/d/1icFYxr2IyxXKOT9yiDSDCvkKokL017RhF8CAt5I8Pvo/edit?usp=sharing
    и заполнить поле фио.
    
    Спустя сутки после заполнения я напишу в поле "seq" ваш индекс-айди последовательности. Если кто-то хочет выбрать раньше, то пишите индекс выбранный. Он не должен быть таким же, как у кого-то другого, в случае если кто-то уже имеет индекс.
    
    Пойти по ссылке https://github.com/Alteroldis/FEFU-bioinf/tree/master/biologists/datasets и скачать три файла, которые там есть, кроме этого. Впрочем и этот можно, если хотите.
    
    Выцепить из результатов blast (efra2swiss.outfmt файл) строки, в которых первый столбец совпадает с вашей seq и гуглодока. Затем найти индексы (столбец 2) белков 10 разных родов многоклеточных с наибольшими оценками выравнивания (последний столбец). Допустим есть три индекса - i1, i2, i3 с оценками s1-s3, где s1 > s2 > s3 и i1 и i2 имеют genus1, а i3 - genus2. Тогда остаться должны только i1 и i3, потому что хоть s2 > s3, но i1 и i2 из рода genus1.
    ОБНОВЛЕНИЕ: сделать это можно сортируя список вида [[score1, genus1, index1], [score2, genus2, index2], ... [scoreN, genusN, indexN]]. А затем создать два множества, в один будете складывать искомые индексы, а в другой - индексы для каких родов уже сложили в первое множество. Затем организовать по сортированному списку цикл for, в первую очередь проверяя, не было ли уже такого рода (пригодится функция continue), а затем запоминая с помощью двух множеств новый индекс и род. Параллельно в цикле можно сказать, что если len(set_seqids) == 10: break. То есть прервать цикл for, когда найдено уже 10 индексов. ПОМНИТЕ, что сортировка по умолчанию идет от меньшего к большему, изменить порядок можно аргументом reverse=True при сортировке.
    
    Найти в файле базы (файл по ссылке в файле database) эти индексы-айди с помощью biopython.
    ОБНОВЛЕНИЕ: в biopython, когда вы делаете for seq in SeqIO.parse..., с помощью seq.description можно получить доступ к описанию последовательности, в которой после "OS=" будет название вида и после "GN=" - название гена. Однако не все последовательности имеют "GN=". Можно проверить с помощью if "GN=" in seq.description. Если нет, то называйте ген как хотите, проявите фантазию). Кстати, при обходе в цикле, seq - это объект SeqRecords, описание которого можно найти по ссыле http://biopython.org/DIST/docs/tutorial/Tutorial.html#sec32
    Кроме того, файл database.fa сформирован с помощью повторов базы swissprot, потому в итоге вы можете получить не 10 последовательностей, а 60. Если добавить все последовательности нужные в список seqs, то получить только нужные, без дублей, можно с помощью seqs = seqs[:10]. Записать их все в один файл можно с помощью SeqIO.write( seqs, "filename", "fasta" ). Параллельно можно и изменить индекс последовательностей, в вид как ниже, с помощью перезаписи seq.id = "%s.%s.%s" % (genus, seq.id, genename) - %s используется для подстановки в строку любых значений.
    
    Сложить все, включая исходную последовательность, в fasta-файл. Имена (индексы) последовательностей сделать в стиле род.индекс.название-гена (легко через python), кроме вашей последовательности seq из таблицы в гуглодоках, для нее индекс-айди последовательности оставить неизменным.

    Проверить на NCBI CDD, что ключевой домен целый, если нет, то выбросить такую последовательность (да, такие будут)
    
    Сделать свой пайплайн на сайте NGPhylogeny — muscle, noisy, FastTree (бутстреп 1000) и запулить расчет. Итог мне.
    ОБНОВЛЕНИЕ: Пайплайн кастомный на сайте можно сделать, если найти фразу на французском).
